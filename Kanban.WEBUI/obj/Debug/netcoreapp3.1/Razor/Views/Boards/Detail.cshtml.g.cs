#pragma checksum "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "66f26d3b2d0ed67860a60b6d4caf705ee6b4b258"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Boards_Detail), @"mvc.1.0.view", @"/Views/Boards/Detail.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\_ViewImports.cshtml"
using Kanban.WEBUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\_ViewImports.cshtml"
using Kanban.WEBUI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"66f26d3b2d0ed67860a60b6d4caf705ee6b4b258", @"/Views/Boards/Detail.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b2af7db111df8c9c8b3c3c9990aca182eca068cd", @"/Views/_ViewImports.cshtml")]
    public class Views_Boards_Detail : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<BoardDetailViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
  
	ViewData["Title"] = "Detail";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"


<div id=""container"" class=""mx-3"">
	<div id=""surface"">
		<main id=""popover-boundary"">
			<div id=""content"">
				<div class=""board-wrapper"">
					<div class=""board-main-content"">
						<div class=""board-header .u-clearfix mx-2"">
							<span id=""baslik"" style=""display:inline-block; font-size:20px; font-weight: 600; cursor: pointer""></span>

");
#nullable restore
#line 17 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
                             if (ViewBag.userRoleId == 1)
							{

#line default
#line hidden
#nullable disable
            WriteLiteral("\t\t\t\t\t\t\t\t<div class=\"form-inline ml-3\" style=\"display: inline-block\">\r\n\t\t\t\t\t\t\t\t\t<input id=\"add-list-input\" placeholder=\"Liste Adı Girin\"");
            BeginWriteAttribute("value", " value=\"", 607, "\"", 615, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"form-control form\"");
            BeginWriteAttribute("onblur", " onblur=\"", 642, "\"", 651, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-primary ml-2\" type=\"button\" onclick=\"CreateColumn()\">Ekle</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n");
            WriteLiteral("\t\t\t\t\t\t\t\t<button data-toggle=\"modal\" data-target=\"#humanDetail\" class=\"btn btn-info ml-4 humanButton\">Kişiler</button>\r\n");
            WriteLiteral("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" style=\"float:right\" id=\"board-delete-btn\">Delete Board</button>\r\n");
#nullable restore
#line 27 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
							}

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"board-canvas mt-2\">\r\n\t\t\t\t\t\t\t<div id=\"board\" class=\"list-group-horizontal ui-sortable-handle\">\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n\t<script type=\"text/javascript\">\r\n\r\n\t\t$(document).ready(function () {\r\n\t\t\tListById();\r\n\r\n\r\n\r\n\t\t});\r\n\r\n\t\tfunction ListById() {\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: \'GET\',\r\n\t\t\t\turl: \'../boarddetail/");
#nullable restore
#line 60 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
                                Write(ViewBag.id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
				success: function (board) {
					$(""#board"").html("""");

					$.each(board.columns, function (index, value) {

						var result = '<div class=""list-wrapper"" columnId=""' + value.id + '""><div class=""list""><div class=""list-header""><h2 class=""columnBaslik"">' + value.name + '</h2>';

						if (");
#nullable restore
#line 68 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
                       Write(ViewBag.userRoleId);

#line default
#line hidden
#nullable disable
                WriteLiteral(@" == 1) {
							result += '<button type=""button"" class=""columnDelete"" aria-label=""Close"" columnId=""' + value.id + '""><span aria-hidden=""true"" style=""font-size: 18px;"">&times;</span></button>';
						}

						result += '</div><div class=""sortable list-cards connectedSortable fancy-scrollbar"">';

						$.each(board.cards, function (index, cardValue) {
							if (cardValue.columnId == value.id)
								result += '<a href=""#cardDetail"" class=""cards"" data-toggle=""modal"" cId=""' + cardValue.id + '""  colId=""' + value.id + '"">' + cardValue.name + '</a>';
						});

						result += ""</div>"";

						if(");
#nullable restore
#line 81 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
                      Write(ViewBag.userRoleId);

#line default
#line hidden
#nullable disable
                WriteLiteral(@" == 1)
						{
							result += '<div class=""card-composer-container""><div class=""input-group input-group-sm mb-3 mt-1 px-2""><input placeholder=""Kart Adı Girin"" value="""" class=""form-control mr-2 add-card-input' + value.id + '""><button class=""btn btn-primary btn-sm"" type=""button"" onclick=""CreateCard(' + value.id + ')"">Ekle</button></div></div>';
						}

						result += '</div></div>';

						$(""#board"").append(result);
					});

					$(""#baslik"").html(board.boardName);


					if (");
#nullable restore
#line 94 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
                   Write(ViewBag.userRoleId);

#line default
#line hidden
#nullable disable
                WriteLiteral(@" == 1) {
						SortableSet();
					}

				}
			});

		}

		function SortableSet() {
			$(""#board"").sortable({
				update: function (event, ui) {
					UpdateColumns();
				}
			});

			$(""#board"").disableSelection();

			$("".sortable"").sortable({
				connectWith: "".connectedSortable"",
				stop: function () {
					UpdateCards();
				}
			}).disableSelection();
		}

		$(document).on(""click"", "".cards"", function () {
			var cardId = $(this).attr(""cId"");
			var cardName = $(this).html();
			$(""#cardDetail"").attr(""cardId"", cardId);
			$(""#modalBaslik"").html(cardName);

			$.ajax({
				type: ""GET"",
				url: ""../../cards/cardsdescription"",
				data: {
					id: cardId
				},
				success: function (result) {
					if (result == """")
						$(""#card-description-area"").html(""Açıklama alanı"");
					else {
						$(""#card-description-area"").html(result);
					}
				},
				error: function (result) {
					$(""#card-description-area"").html(""ERROR"");
				}
			});
		});

	</script>
");
                WriteLiteral("\r\n");
#nullable restore
#line 147 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
     if (ViewBag.userRoleId == 1)
	{

#line default
#line hidden
#nullable disable
                WriteLiteral(@"		<script type=""text/javascript"">

			function UpdateColumns() {
				var positions = [];
				var ids = [];
				$("".list-wrapper"").each(function (index, element) {
					//id si x olan ürünün indexi y <<<<<<<<<<<
					ids.push(parseInt($(element).attr(""columnid"")));
					positions.push(index + 1);
				});

				$.ajax({
					type: ""POST"",
					url: ""../../columns/updatecolumn"",
					data: {
						ids: ids,
						positions: positions
					},
					success: function () {
						ListById();
					},
					error: function () {
						ListById();
					}
				});
			}

			function UpdateCards() {
				var positions = [];
				var columnsId = [];
				var cardsId = [];

				$("".cards"").each(function (index, element) {
					positions.push(index + 1);
					$(element).attr(""colId"", parseInt($(element).parent().parent().parent().attr(""columnid"")));
					columnsId.push(parseInt($(element).attr(""colId"")));
					cardsId.push(parseInt($(element).attr(""cId"")));
				});


				$.ajax({
					type: """);
                WriteLiteral(@"POST"",
					url: ""../../cards/updatecards"",
					data: {
						cardsId: cardsId,
						columnsId: columnsId,
						positions: positions
					},
					success: function () {
						ListById();
					},
					error: function () {
						ListById();
					}
				});

			}

			function CreateColumn() {
				var name = $(""#add-list-input"").val();
				var columnCount = $("".list-wrapper"").length;

				if (columnCount != null)
					parseInt(columnCount);
				else {
					columnCount = 0;
					parseInt(columnCount);
				}

				if (name != """") {
					$.ajax({
						type: ""POST"",
						url: ""../../columns/create"",
						data: {
							name: name,
							columnCount: columnCount,
							boardId: ");
#nullable restore
#line 225 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
                                Write(ViewBag.id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
						},
						success: function () {
							$(""#add-list-input"").val("""");
							ListById();
						}
					});
				}
			}

			function CreateCard(id) {
				var name = $("".add-card-input""+id).val();
				var colId = parseInt(id);


				if (name != """") {
					$.ajax({
						type: ""POST"",
						url: ""../../cards/create"",
						data: {
							name: name,
							colId: colId,
						},
						success: function () {
							$(""#add-card-input"").val("""");
							ListById();
						},
						error: function() {
							$(""#add-card-input"").val("""");
							ListById();
						}
					});
				}
			}


			//Boarddaki kullanıcıları listeleme
			$(document).on(""click"", "".humanButton"", function () {
				UserListele();
			});

			function UserListele() {
				$.ajax({
					type: ""GET"",
					url: ""../boarduserlist"",
					data: {
						boardId: ");
#nullable restore
#line 271 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
                            Write(ViewBag.id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
					},
					success: function (result) {
						$(""#personModalBody"").html("""");

						var res;

						$.each(result, function (index, value) {
							res += '<tr><th scope = ""row"" >' + value.id + '</th><td>' + value.email + '</td><td><button type =""button"" userId=""' + value.id + '"" class=""btn btn-outline-danger user-delete-modal-button"">Delete</button ></td></tr>';
						});

						$(""#personModalBody"").append(res);
					},
					error: function (result) {
						console.log(result);
					}
				});
	}

			//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

			//Boarddan kullanıcı silme işlemi
			$(document).on(""click"", "".user-delete-modal-button"", function () {
				var userId = $(this).attr(""userId"");
				var boardId = ");
#nullable restore
#line 295 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
                         Write(ViewBag.id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@";

				$.ajax({
					type: ""POST"",
					url: ""../deleteuserboard"",
					data: {
						userId: userId,
						boardId: boardId
					},
					success: function () {
						UserListele();
					},
					error: function () {
						UserListele();
					}
				});
			});

			//kişi davet etme eventi
			$(document).on(""click"", "".kisiDavetBtn"", function () {

				//uid davet edilen kişinin id si
				var uId = $(""#kisiDavetInput"").val();
				var boardId = ");
#nullable restore
#line 318 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
                         Write(ViewBag.boardId);

#line default
#line hidden
#nullable disable
                WriteLiteral(@";


				$.ajax({
					type: ""POST"",
					url: ""../boardinvitation"",
					data: {
						uId: uId,
						boardId: boardId
					},
					success: function () {
						$(""#kisiDavetInput"").val("""");
					},
					error: function () {
						$(""#kisiDavetInput"").val("""");
					}
				});
			});

			//column silme eventi
			$(document).on(""click"", "".columnDelete"", function () {

				var cId = $(this).attr(""columnId"");
				var boardId = ");
#nullable restore
#line 341 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
                         Write(ViewBag.boardId);

#line default
#line hidden
#nullable disable
                WriteLiteral(@";


				$.ajax({
					type: ""POST"",
					url: ""../../columns/delete"",
					data: {
						id: cId
					},
					success: function () {
						ListById();
					},
					error: function () {
						ListById();
					}
				});
			});

			//board ve card baslik değiştirme
			$(function () {
				$(""#baslik"").dblclick(function (e) {
					e.stopPropagation();
					var currentEle = $(this);
					var value = $(this).html();
					UpdateBoardName(currentEle, value);
				});

				$(""#modalBaslik"").dblclick(function (e) {
					e.stopPropagation();
					var currentEle = $(this);
					var value = $(this).html();

					UpdateCardName(currentEle, value);
				});
			});

			//column baslik değiştirme
			$(document).on(""dblclick"", "".columnBaslik"", function () {
				var currentEle = $(this);
				var value = $(this).html();

				UpdateColumnName(currentEle, value);
			});

			//baslik değiştirme fonksiyonları
			function UpdateBoardName(currentEle, value) {
				$(currentEle).html('<input cl");
                WriteLiteral(@"ass=""thVal form-control"" type=""text"" value=""' + value + '"" />');
				$("".thVal"").focus();
				$("".thVal"").keyup(function (event) {
					if (event.keyCode == 13) {
						$(currentEle).html($("".thVal"").val().trim());
						var name = $(""#baslik"").html();

						$.ajax({
							type: ""POST"",
							url: ""../boardnamechange"",
							data: {
								name: name,
								id: ");
#nullable restore
#line 399 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
                               Write(ViewBag.id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
							},
							success: function () {
								ListById();
							},
							error: function () {
								ListById();
							}
						});
					}
				});
			}

			function UpdateCardName(currentEle, value) {
				$(currentEle).html('<input class=""thVal form-control"" type=""text"" value=""' + value + '"" />');
				$("".thVal"").focus();
				$("".thVal"").keyup(function (event) {
					if (event.keyCode == 13) {
						$(currentEle).html($("".thVal"").val().trim());
						var name = $(""#modalBaslik"").html();
						var id = $(""#cardDetail"").attr(""cardId"");

						$.ajax({
							type: ""POST"",
							url: ""../../cards/changename"",
							data: {
								name: name,
								id: id
							},
							success: function () {
								ListById();
							},
							error: function () {
								ListById();
							}
						});
					}
				});
			}

			function UpdateColumnName(currentEle, value) {
				$(currentEle).html('<input class=""thVal form-control"" type=""text"" value=""' + value + '"" />');
				");
                WriteLiteral(@"$("".thVal"").focus();
				$("".thVal"").keyup(function (event) {
					if (event.keyCode == 13) {
						$(currentEle).html($("".thVal"").val().trim());
						var name = $(currentEle).html();
						var id = $(currentEle).closest("".list-wrapper"").attr(""columnId"");


						$.ajax({
							type: ""POST"",
							url: ""../../columns/changename"",
							data: {
								name: name,
								id: id
							},
							success: function () {
								ListById();
							},
							error: function () {
								ListById();
							}
						});
					}
				});
			}

			//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

			//card silme işlemleri
			$(document).on(""click"", ""#card-delete"", function () {
				var cardId = $(""#cardDetail"").attr(""cardId"");

				$.ajax({
					type: ""POST"",
					url: ""../../cards/isdeletedcard"",
					data: {
						cId: cardId
					},
					success: function () {
						$(""#cardDetail"").modal(""hide"");
						ListById();
					},
					error: function () {
						ListByI");
                WriteLiteral(@"d();
					}
				});
			});

			$(document).on(""click"", ""#board-delete-btn"", function () {

				$(""#board-delete-modal"").modal(""show"");

				$(""#board-delete-modal-btn-no"").on(""click"", function () {
					$(""#board-delete-modal"").modal(""hide"");
				});

				$(""#board-delete-modal-btn-yes"").on(""click"", function () {
					$(""#board-delete-modal"").modal(""hide"");

					$.ajax({
						type: ""POST"",
						url: ""../boardDelete"",
						data: {
							id: ");
#nullable restore
#line 504 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
                           Write(ViewBag.id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
						},
						success: function () {
							window.location.href = ""http://localhost:5000/boards"";
						}
					});

				});
			});

			//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

			//Card açıklama alanı düzenleme
			$(document).on(""dblclick"", ""#card-description-area"", function () {

				var cardId = $(""#cardDetail"").attr(""cardId"");

				var current = $(this).text();
				$(""#card-description-area"").html('<textarea class=""form-control"" id=""card-description-edit"" rows=""5"">' + current + '</textarea>');

				$(""#card-description-edit"").focus(function () {

				}).blur(function () {
					var newcont = $(""#card-description-edit"").val();
					$(""#card-description-area"").text(newcont.trim());

					var des = $(""#card-description-area"").html();

					$.ajax({
						type: ""POST"",
						url: ""../../cards/updatedescription"",
						data: {
							cardId: cardId,
							description: des,
						}
					});
				});

				if (event.keyCode == 13) {

				}

			});

");
                WriteLiteral("\t\t\t//Card silme butonu role 1 için etkin\r\n\t\t\t$(document).ready(function () {\r\n\t\t\t\t$(\"#card-modal-footer\").append(\'<button class=\"btn btn-danger\" style=\"float: left;\" id=\"card-delete\">Delete Card</button>\');\r\n\t\t\t});\r\n\t\t</script>\r\n");
#nullable restore
#line 553 "C:\Users\M\source\repos\Kanban\Kanban.WEBUI\Views\Boards\Detail.cshtml"
	}

#line default
#line hidden
#nullable disable
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<BoardDetailViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
